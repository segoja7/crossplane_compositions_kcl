apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: multiazwordpressinfra-composition
spec:
  compositeTypeRef:
    apiVersion: segoja7.example/v1alpha1
    kind: MultiAzWordpressInfra
  mode: Pipeline
  pipeline:
  - step: normal
    functionRef:
      name: function-kcl
    input:
      apiVersion: krm.kcl.dev/v1alpha1
      kind: KCLRun
      metadata:
        name: basic
      spec:
        source: |
          projectName = option("params")?.oxr?.spec.parameters.projectName or "nodefined"
          vpccidrBlock = option("params")?.oxr?.spec.parameters.vpccidrBlock or "10.0.0.0/16" 
          region = option("params")?.oxr?.spec.region or "us-east-1"
          providerConfigName = option("params")?.oxr?.spec?.providerConfigName or "segoja7"
          tags_base = {
              "app" = "wordpress"
          }          
          database_subnet_configs = [
              {"name": "data-private-subnet-az1", "cidr": "172.16.1.0/24", "zone": "us-east-1a", "type": "private"},
              {"name": "data-private-subnet-az2", "cidr": "172.16.2.0/24", "zone": "us-east-1b", "type": "private"},
              {"name": "app-private-subnet-az1", "cidr": "172.16.3.0/24", "zone": "us-east-1a", "type": "private"},
              {"name": "app-private-subnet-az2", "cidr": "172.16.4.0/24", "zone": "us-east-1b", "type": "private"},
              {"name": "public-subnet-az1", "cidr": "172.16.5.0/24", "zone": "us-east-1a", "type": "public"},
              {"name": "public-subnet-az2", "cidr": "172.16.6.0/24", "zone": "us-east-1b", "type": "public"}
          ]                      
          vpc = {
              apiVersion = "ec2.aws.upbound.io/v1beta1"
              kind = "VPC"
              metadata.name = "vpc"
              spec.forProvider = {
                  region = region
                  cidrBlock = vpccidrBlock
                  enableDnsSupport = True
                  enableDnsHostnames = True
                  tags = {
                    "app" = "wordpress"
                    "Name" = metadata.name + "-" + projectName
                  }
              }
              spec.providerConfigRef.name = providerConfigName
          }
          
          gateway = {
              apiVersion = "ec2.aws.upbound.io/v1beta1"
              kind = "InternetGateway"
              metadata.name = "internetgateway"
              spec.forProvider = {
                  region = region
                  vpcIdSelector.matchControllerRef = True
                  tags = {
                    "app" = "wordpress"
                    "Name" = metadata.name + "-" + projectName
                  }
              }
              spec.providerConfigRef.name = providerConfigName
          }
          subnets = [ 
              {
                  apiVersion = "ec2.aws.upbound.io/v1beta1"
                  kind = "Subnet"
                  metadata.name = subnet_config.name
                  metadata.annotations: {
                      "krm.kcl.dev/composition-resource-name" = subnet_config.name + subnet_config.zone
                  }
                  spec.forProvider = {
                      region = region
                      vpcIdSelector.matchControllerRef = True
                      availabilityZone = subnet_config.zone
                      cidrBlock = subnet_config.cidr
                      mapPublicIpOnLaunch = True if subnet_config.type == "public" else False
                      tags = {
                        "app" = "wordpress"
                        "Name" = metadata.name + "-" + projectName
                        "Type" = subnet_config.type
                      }
                  }
                  spec.providerConfigRef.name = providerConfigName
              } for subnet_config in database_subnet_configs
          ]
       
          items = [vpc, gateway] + subnets
